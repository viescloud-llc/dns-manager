{
    "sourceFile": "src/main/java/com/vincent/llc/dns/manager/feign/CloudflareClient.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1730143412145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730165363959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,45 +2,42 @@\n \r\n import java.util.Map;\r\n \r\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\r\n-// import org.springframework.cloud.openfeign.FeignClient;\r\n+import org.springframework.cloud.openfeign.FeignClient;\r\n import org.springframework.web.bind.annotation.GetMapping;\r\n import org.springframework.web.bind.annotation.PatchMapping;\r\n import org.springframework.web.bind.annotation.PathVariable;\r\n import org.springframework.web.bind.annotation.RequestHeader;\r\n import org.springframework.web.bind.annotation.RequestParam;\r\n \r\n-// import com.viescloud.lcc.cloudflare.checker.model.CloudflareListWarper;\r\n-// import com.viescloud.lcc.cloudflare.checker.model.CloudflareWarper;\r\n+import io.swagger.v3.oas.annotations.parameters.RequestBody;\r\n \r\n-// import io.swagger.v3.oas.annotations.parameters.RequestBody;\r\n-\r\n-// @FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.ip}\")\r\n+@FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.ip}\")\r\n public interface CloudflareClient {\r\n     \r\n-    // @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records\", produces = \"application/json\")\r\n-    // CloudflareListWarper getDNSList(\r\n-    //     @PathVariable(\"zoneId\") String zoneId, \r\n-    //     @RequestHeader(\"X-Auth-Email\") String email, \r\n-    //     @RequestHeader(\"X-Auth-Key\") String key,\r\n-    //     @RequestParam(value = \"page\", required = false) Integer page, // Optional parameter\r\n-    //     @RequestParam(value = \"per_page\", required = false) Integer perPage // Optional parameter\r\n-    // );\r\n+    @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records\", produces = \"application/json\")\r\n+    CloudflareListWarper getDNSList(\r\n+        @PathVariable(\"zoneId\") String zoneId, \r\n+        @RequestHeader(\"X-Auth-Email\") String email, \r\n+        @RequestHeader(\"X-Auth-Key\") String key,\r\n+        @RequestParam(value = \"page\", required = false) Integer page, // Optional parameter\r\n+        @RequestParam(value = \"per_page\", required = false) Integer perPage // Optional parameter\r\n+    );\r\n \r\n-    // @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\")\r\n-    // CloudflareWarper getDNS(\r\n-    //         @PathVariable(\"zoneId\") String zoneId, \r\n-    //         @PathVariable(\"recordId\") String recordId, \r\n-    //         @RequestHeader(\"X-Auth-Email\") String email, \r\n-    //         @RequestHeader(\"X-Auth-Key\") String key\r\n-    // );\r\n+    @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\")\r\n+    CloudflareWarper getDNS(\r\n+            @PathVariable(\"zoneId\") String zoneId, \r\n+            @PathVariable(\"recordId\") String recordId, \r\n+            @RequestHeader(\"X-Auth-Email\") String email, \r\n+            @RequestHeader(\"X-Auth-Key\") String key\r\n+    );\r\n \r\n-    // @PatchMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\", consumes = \"application/json\")\r\n-    // CloudflareWarper patchDNS(\r\n-    //         @PathVariable(\"zoneId\") String zoneId, \r\n-    //         @PathVariable(\"recordId\") String recordId, \r\n-    //         @RequestBody Map<String, Object> data, \r\n-    //         @RequestHeader(\"X-Auth-Email\") String email, \r\n-    //         @RequestHeader(\"X-Auth-Key\") String key\r\n-    // );\r\n+    @PatchMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\", consumes = \"application/json\")\r\n+    CloudflareWarper patchDNS(\r\n+            @PathVariable(\"zoneId\") String zoneId, \r\n+            @PathVariable(\"recordId\") String recordId, \r\n+            @RequestBody Map<String, Object> data, \r\n+            @RequestHeader(\"X-Auth-Email\") String email, \r\n+            @RequestHeader(\"X-Auth-Key\") String key\r\n+    );\r\n }\r\n"
                },
                {
                    "date": 1730165382443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,32 +9,35 @@\n import org.springframework.web.bind.annotation.PathVariable;\r\n import org.springframework.web.bind.annotation.RequestHeader;\r\n import org.springframework.web.bind.annotation.RequestParam;\r\n \r\n+import com.vincent.llc.dns.manager.model.CloudflareListWarper;\r\n+import com.vincent.llc.dns.manager.model.CloudflareWarper;\r\n+\r\n import io.swagger.v3.oas.annotations.parameters.RequestBody;\r\n \r\n @FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.ip}\")\r\n public interface CloudflareClient {\r\n     \r\n     @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records\", produces = \"application/json\")\r\n-    CloudflareListWarper getDNSList(\r\n+    public CloudflareListWarper getDNSList(\r\n         @PathVariable(\"zoneId\") String zoneId, \r\n         @RequestHeader(\"X-Auth-Email\") String email, \r\n         @RequestHeader(\"X-Auth-Key\") String key,\r\n         @RequestParam(value = \"page\", required = false) Integer page, // Optional parameter\r\n         @RequestParam(value = \"per_page\", required = false) Integer perPage // Optional parameter\r\n     );\r\n \r\n     @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\")\r\n-    CloudflareWarper getDNS(\r\n+    public CloudflareWarper getDNS(\r\n             @PathVariable(\"zoneId\") String zoneId, \r\n             @PathVariable(\"recordId\") String recordId, \r\n             @RequestHeader(\"X-Auth-Email\") String email, \r\n             @RequestHeader(\"X-Auth-Key\") String key\r\n     );\r\n \r\n     @PatchMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\", consumes = \"application/json\")\r\n-    CloudflareWarper patchDNS(\r\n+    public CloudflareWarper patchDNS(\r\n             @PathVariable(\"zoneId\") String zoneId, \r\n             @PathVariable(\"recordId\") String recordId, \r\n             @RequestBody Map<String, Object> data, \r\n             @RequestHeader(\"X-Auth-Email\") String email, \r\n"
                },
                {
                    "date": 1730165390942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package com.vincent.llc.dns.manager.feign;\r\n \r\n import java.util.Map;\r\n \r\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\r\n import org.springframework.cloud.openfeign.FeignClient;\r\n import org.springframework.web.bind.annotation.GetMapping;\r\n import org.springframework.web.bind.annotation.PatchMapping;\r\n import org.springframework.web.bind.annotation.PathVariable;\r\n"
                },
                {
                    "date": 1730165948865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import com.vincent.llc.dns.manager.model.CloudflareWarper;\r\n \r\n import io.swagger.v3.oas.annotations.parameters.RequestBody;\r\n \r\n-@FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.ip}\")\r\n+@FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.uri}\")\r\n public interface CloudflareClient {\r\n     \r\n     @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records\", produces = \"application/json\")\r\n     public CloudflareListWarper getDNSList(\r\n"
                },
                {
                    "date": 1730166029245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     @PatchMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\", consumes = \"application/json\")\r\n     public CloudflareWarper patchDNS(\r\n             @PathVariable(\"zoneId\") String zoneId, \r\n             @PathVariable(\"recordId\") String recordId, \r\n-            @RequestBody Map<String, Object> data, \r\n             @RequestHeader(\"X-Auth-Email\") String email, \r\n-            @RequestHeader(\"X-Auth-Key\") String key\r\n+            @RequestHeader(\"X-Auth-Key\") String key,\r\n+            @RequestBody Map<String, Object> data\r\n     );\r\n }\r\n"
                }
            ],
            "date": 1730143412145,
            "name": "Commit-0",
            "content": "package com.vincent.llc.dns.manager.feign;\r\n\r\nimport java.util.Map;\r\n\r\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\r\n// import org.springframework.cloud.openfeign.FeignClient;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PatchMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestHeader;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\n\r\n// import com.viescloud.lcc.cloudflare.checker.model.CloudflareListWarper;\r\n// import com.viescloud.lcc.cloudflare.checker.model.CloudflareWarper;\r\n\r\n// import io.swagger.v3.oas.annotations.parameters.RequestBody;\r\n\r\n// @FeignClient(name = \"cloudflareClient\", url = \"${cloudflare.ip}\")\r\npublic interface CloudflareClient {\r\n    \r\n    // @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records\", produces = \"application/json\")\r\n    // CloudflareListWarper getDNSList(\r\n    //     @PathVariable(\"zoneId\") String zoneId, \r\n    //     @RequestHeader(\"X-Auth-Email\") String email, \r\n    //     @RequestHeader(\"X-Auth-Key\") String key,\r\n    //     @RequestParam(value = \"page\", required = false) Integer page, // Optional parameter\r\n    //     @RequestParam(value = \"per_page\", required = false) Integer perPage // Optional parameter\r\n    // );\r\n\r\n    // @GetMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\")\r\n    // CloudflareWarper getDNS(\r\n    //         @PathVariable(\"zoneId\") String zoneId, \r\n    //         @PathVariable(\"recordId\") String recordId, \r\n    //         @RequestHeader(\"X-Auth-Email\") String email, \r\n    //         @RequestHeader(\"X-Auth-Key\") String key\r\n    // );\r\n\r\n    // @PatchMapping(value = \"client/v4/zones/{zoneId}/dns_records/{recordId}\", produces = \"application/json\", consumes = \"application/json\")\r\n    // CloudflareWarper patchDNS(\r\n    //         @PathVariable(\"zoneId\") String zoneId, \r\n    //         @PathVariable(\"recordId\") String recordId, \r\n    //         @RequestBody Map<String, Object> data, \r\n    //         @RequestHeader(\"X-Auth-Email\") String email, \r\n    //         @RequestHeader(\"X-Auth-Key\") String key\r\n    // );\r\n}\r\n"
        }
    ]
}